import{_ as e,c as a,o as r,O as t}from"./chunks/framework.41379913.js";const l="/assets/wechat-mp-qrcode.f64c0e73.jpg",i="/assets/wechat-pay-qrcode.87383472.jpg",_=JSON.parse('{"title":"引言","description":"","frontmatter":{},"headers":[],"relativePath":"intro.md"}'),o={name:"intro.md"},n=t('<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">​</a></h1><h2 id="编程" tabindex="-1">编程 <a class="header-anchor" href="#编程" aria-label="Permalink to &quot;编程&quot;">​</a></h2><p>编程（Programming）是一项创造性的活动，如同创作（Composing）、绘画（Painting）等一样。我们常常会通过一系列的步骤把所需要的部件进行组合，得到另一个期望的结构，或者是解决一个实际性的问题。表达和构建这些步骤的过程，就是编程（当然，在脱离程序语言以后，也可以把它叫做<strong>规划</strong>（Programme））。</p><p>我们会简单地把一件件小事按<strong>顺序</strong>做，这样一件件小事的组合以后就可以完成一件更大的事情。比如我们会切菜，生火，炒菜，煮饭，这样我们就能够做出一顿午餐。</p><p>当然在这个过程中可能会设计一些<strong>计算</strong>。我们会考虑，需要放几勺盐和几把米，以适合最后吃午餐的人的营养均衡。在特殊的时候，甚至需要精确到毫克级别的营养规划，以及不同人的营养结构的差异等。我们会在第二节探讨关于计算，以及计算的<strong>组合</strong>等相关问题。</p><p>在规划和解决问题的时候可能并不是一帆风顺的，有时候我们会面临各种抉择。比如，考虑明天下午吃素还是吃荤，吃鸡肉和还是鱼肉，吃宫保鸡丁还是鱼香肉丝等等。有比如，在我们准备吃鱼香肉丝的时候发现没有鱼了，又该怎么办。</p><p>在任何需要做选择的时候，作为一个程序员（<strong>规划师</strong>），你不应该出现选择困难症。因为任何一个涵待解决的问题都必须得到解决之后才能让这个程序正常地执行。所以，我们在第三章中会探讨关于过程设计，以及如何利用循环和选择等手法来设计一个完善的程序的相关问题。</p><p>但是做饭的时候你是怎么区分盐和砂糖、醋和酱油的呢？当然你会说每个都尝一遍，但是这样既有可能浪费，又不卫生。所以习惯性地我们会关注这些材料瓶上面的标签，从上面知道我们用的是什么东西。当然对于读不懂标签的计算机来说，这些材料作为商品的时候都会有固定的条形码，这个条形码也能够让计算机知道一个被它看到的东西代表着什么。因为它知道这些条码是如何<strong>编码</strong>（Encoding）的。</p><p>当你遇到大量具有相同组件的时候，可以考虑用<strong>序列</strong>（Sequence）或者列表（List）来安排这些组件。比如做一道菜的每一个步骤对应在菜谱上的每一项。或者是在处理具有层级结构以及更复杂的关联的结构的时候采用<strong>树</strong>（Tree）和<strong>图</strong>（Graph）来组织。比如六度关系理论，实际上就是一张非常大的<strong>图</strong>（Graph）。</p><p>有时候会考虑到一部分组件是可变的。比如时间总是流逝的，人总会长大的。当我们尝试描述一个组件改变的时候，就引入了<strong>状态</strong>（State）。这种时候我们更希望能够把改变的数据和相应的操作做一个绑定，这样子绑定了组件的操作就可以看成一个闭包（Closure）。简单地比如一个计数器。当在组件上面绑定更多操作的时候，就可以把它看作一个<strong>对象</strong>（Object）。</p><p>可变的状态可能会带来的一个问题就是，如果有多个人尝试同时去修改这个状态的时候，会造成结果的不一致性。比如，一个没有加入事务处理的银行账户，两个人同时在进行操作，账户中原有1000元，甲存入了200块，但在甲存入200块还未完成的同时乙取出了200块。这种时候会有几种可能的结果，第一种就是甲先于乙完成操作，结果就是账户余额变成了800块，凭空损失了200块；另外一种就是乙先于甲完成了操作，结果账户余额就变成了甲操作的结果，1200块，凭空多出来400块。这种问题就属于<strong>并发</strong>（Concurrency）。</p><h2 id="javascript" tabindex="-1">JavaScript <a class="header-anchor" href="#javascript" aria-label="Permalink to &quot;JavaScript&quot;">​</a></h2><p>本书选择使用JavaScript来讲述编程中的各种思想和概念。</p><p>我们并不是在讲述JavaScript这门编程语言，只是通过JavaScript和其提供的丰富的方便特性，来讲述关于“程序设计”的内容。任何与JavaScript细节相关的东西，可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="noreferrer">Mozilla Developer Network</a>，对于特定的主题，我也会专门列出可以参阅的链接。<a href="http://stackoverflow.com/questions/tagged/javascript" target="_blank" rel="noreferrer">StackOverflow</a>上也有丰富的资源来解答你的疑惑。</p><p>作为入门书籍，为了直观地表述各种概念或者原理，本书可能会使用一些非专业词汇，或者与准确定义有偏差的理解。JavaScript作为一种生产力工具，其准确定义和行为以<a href="https://tc39.es/ecma262/" target="_blank" rel="noreferrer">ECMA 262</a>国际标准为准。对专业人员如有任何困惑或者争议的点，请参考标准文档的描述。同样，如果你通过本书对编程和相关的东西产生了兴趣，希望深入了解和学习，也请使用专业的书籍和资料。本书只是作为入门的引导，不对专业内容做解释和定义。</p><h2 id="更新状态" tabindex="-1">更新状态 <a class="header-anchor" href="#更新状态" aria-label="Permalink to &quot;更新状态&quot;">​</a></h2><p>这本书从2015年8月开始编写，中间经过了多次的重写过程，包括把编程语言从偏硬核且专业的C++转向为JavaScript、引入更多资料和练习、增补和调整章节顺序等，目前内容仍处于不稳定的状态，请参考下面的状态来确定这一章是否值得学习：</p><ul><li>第一章 环境 (rewriting)</li><li>第二章 计算 Computation (outdated)</li><li>第三章 过程 Procedural (outdated)</li><li>第四章 编码 Encoding (outdated)</li><li>第五章 序列 Sequence (outdated)</li><li>第六章 数据 Data (outdated)</li><li>第七章 状态 State (prepared)</li><li>第八章 引用 Reference</li><li>第九章 闭包 Closure</li><li>第十章 对象 Object (prepared)</li><li>第十一章</li><li>第十二章</li><li>more...</li></ul><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="./intro.html">引言</a></li><li><a href="./ch01_environment.html">环境</a></li><li><a href="./ch02_computation.html">计算</a></li><li><a href="./ch03_procedure.html">过程</a></li><li><a href="./ch04_encoding.html">编码</a></li><li><a href="./ch05_sequence.html">序列</a></li><li><a href="./ch06_data.html">数据</a></li><li><a href="./ch07_state.html">状态</a></li><li><a href="./ch08_reference.html">引用</a></li><li><a href="./ch09_closure.html">闭包</a></li><li><a href="./ch10_object.html">对象</a></li><li><a href="./ch11_concurrency.html">并发</a></li></ul><h2 id="参与贡献" tabindex="-1">参与贡献 <a class="header-anchor" href="#参与贡献" aria-label="Permalink to &quot;参与贡献&quot;">​</a></h2><p>本书的源码托管在<a href="https://github.com/kenpusney/i2p-the-book" target="_blank" rel="noreferrer">github:kenpusney/i2p-the-book</a>仓库，你可以提交issue或者pull request贡献和改进本书。</p><h2 id="支持我" tabindex="-1">支持我 <a class="header-anchor" href="#支持我" aria-label="Permalink to &quot;支持我&quot;">​</a></h2><h3 id="关注我的公众号获取更新" tabindex="-1">关注我的公众号获取更新： <a class="header-anchor" href="#关注我的公众号获取更新" aria-label="Permalink to &quot;关注我的公众号获取更新：&quot;">​</a></h3><img alt="微信公众号" src="'+l+'" width="256"><h4 id="资助我创作" tabindex="-1">资助我创作： <a class="header-anchor" href="#资助我创作" aria-label="Permalink to &quot;资助我创作：&quot;">​</a></h4><p>微信二维码：</p><img alt="Buy me a coffee" src="'+i+'" width="256"><p>或点击<a href="http://paypal.me/kenpusney" target="_blank" rel="noreferrer">我的 Paypal 链接</a>给予帮助。</p><h6 id="特别感谢以下朋友的资助" tabindex="-1">特别感谢以下朋友的资助 <a class="header-anchor" href="#特别感谢以下朋友的资助" aria-label="Permalink to &quot;特别感谢以下朋友的资助&quot;">​</a></h6><ul><li><a href="https://github.com/esrever10" target="_blank" rel="noreferrer">esrever10</a></li><li><a href="https://github.com/karakapi" target="_blank" rel="noreferrer">karakapi</a></li><li><a href="http://sqrt-1.me" target="_blank" rel="noreferrer">负一的平方根</a></li><li><a href="http://www.linkgod.net" target="_blank" rel="noreferrer">linkgod</a></li><li><a href="https://github.com/shellvon" target="_blank" rel="noreferrer">shellvon</a> &amp; <a href="https://github.com/tingoo" target="_blank" rel="noreferrer">tingoo</a></li></ul>',31),h=[n];function s(c,p,d,g,u,f){return r(),a("div",null,h)}const b=e(o,[["render",s]]);export{_ as __pageData,b as default};
